type ExecuteSupplyParams = record {
  asset : text;
  referral_code : nat16;
  amount : nat;
};

type ExecuteRepayParams = record {
  asset : text;
  amount : nat;
  on_behalf_of : opt text;
};

type ExecuteWithdrawParams = record {
  asset : text;
  amount : nat;
  on_behalf_of : opt text;
  is_collateral : bool;
};

type ReserveData = record {
  asset_name: opt text;
  id: nat16;
  borrow_rate: float64;
  supply_rate_apr: opt float64;
  total_supply: opt float64;
  last_update_timestamp: nat64;
  d_token_canister: opt text;
  debt_token_canister: opt text;
  liquidity_index: nat;
  current_liquidity_rate: nat;
  debt_index: float64;
  configuration: ReserveConfiguration;
  can_be_collateral: opt bool;
};


type ReserveConfiguration = record {
  ltv: nat16;
  liquidation_threshold: nat16;
  liquidation_bonus: nat16;
  borrowing_enabled: bool;
  borrow_cap: nat64;
  supply_cap: nat64;
  liquidation_protocol_fee: nat16;
  active: bool;
  frozen: bool;
  paused: bool;
  total_supplies: float64;
  total_borrowed: float64;
};

type Result = variant { Ok; Err : text };

type Result_1 = variant { Ok : ReserveData; Err : text };

type Result_2 = variant { Ok : UserData; Err : text };

type Result_3 = variant { Ok : nat; Err : text };

type Result_4 = variant { Ok : null; Err : text };

type UserData = record {
  user_id : opt text;
  net_apy : opt float64;
  health_factor : opt float64;
  net_worth : opt float64;
  total_collateral: opt float64;
  total_debt: opt float64;
  available_borrow: opt float64;
  reserves : opt vec record { text; UserReserveData };
  ltv: opt float64;
  liquidation_threshold: opt float64;
};

type UserReserveData = record {
  reserve : text;
  principal_stable_debt : nat64;
  total_stable_debt : nat64;
  total_variable_debt : nat64;
  avg_stable_borrow_rate : float64;
  last_update_timestamp : nat64;
  liquidity_index : float64;
  asset_supply : float64;
  asset_borrow : float64;
  variable_borrow_index : float64;
  asset_price_when_supplied : float64;
  asset_price_when_borrowed : float64;
};

service : () -> {
  initialize_reserve : () -> ();
  new_canister : () -> (principal);
  create_multiple_canisters : () -> (vec principal);
  configure_reserve_as_collateral : (text, nat16, nat16, nat16) -> (Result);
  get_reserve_data : (text) -> (variant { Ok : ReserveData; Err : text }) query;
  get_user_data : (text) -> (variant { Ok : UserData; Err : text }) query;
  get_all_assets : () -> (vec text) query;
  get_all_users : () -> (vec record { principal; UserData }) query;
  check_user : (text) -> (variant { Ok : text; Err : text });
  supply : (text, nat64, bool) -> (Result_4);
  borrow : (text, nat64) -> (Result_4);
  repay : (text, nat, opt text) -> (Result_4);
  withdraw : (text, nat, opt text, bool) -> (Result_4);
  liquidation_call : (text, text, nat64, text) -> (Result);
  get_asset_principal: (text) -> (variant { Ok : principal; Err : text }) query;
};
